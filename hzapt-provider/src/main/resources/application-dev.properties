######## nacos 配置中心  ######## ######## ######## ########
#nacos.config.server-addr = 106.12.16.248:8848
######## dubbo config  ######## ######## ######## ########
#注册中心地址
dubbo.application.name=hzapt-provider
dubbo.protocol.name=dubbo
#暴露服务端口 （默认是20880，修改端口，不同的服务提供者端口不能重复） 
dubbo.protocol.port=-1
dubbo.protocol.status=server
#配置注册中心
dubbo.registry.address=nacos://127.0.0.1:8848
##如果要使用自己创建的命名空间可以使用下面2种方式
#dubbo.registry.address = nacos://127.0.0.1:8848?namespace=5cbb70a5-xxx-xxx-xxx-d43479ae0932
#dubbo.registry.parameters.namespace=5cbb70a5-xxx-xxx-xxx-d43479ae0932
#扫描路径
dubbo.scan.base-packages=com.hzapt.provider.logic
#检查服务是否可用默认为true，不可用时抛出异常，阻止spring初始化，为方便部署，可以改成false
dubbo.consumer.check=false
#连接重试次数，默认2次
dubbo.provider.retries=0
#连接超时，默认1000毫秒
dubbo.provider.timeout=36000
#配置dubbo能抛出自定义异常
dubbo.provider.filter=-exception
#负载均衡策略，random,roundrobin,leastactive，分别表示：随机，轮循，最少活跃调用 
dubbo.provider.loadbalance=leastactive

######## 数据库配置 ########
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://118.178.229.8:3306/hzapt?serverTimezone=GMT%2B8&characterEncoding=utf8&useSSL=true
spring.datasource.username=hzapt
spring.datasource.password=hzapt

####  druid配置
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=100
# 连接超时时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 指定一个空闲连接最少空闲多久后可被清除，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 当连接空闲时，是否执行连接测试
spring.datasource.druid.test-while-idle=true
# 当从连接池借用连接时，是否测试该连接
spring.datasource.druid.test-on-borrow=false
# 在连接归还到连接池时是否测试该连接
spring.datasource.druid.test-on-return=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=config,wall,stat
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.max-open-prepared-statements=20

####  mybatis配置
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=500
mybatis.configuration.default-statement-timeout=20
# mybatis-plus配置
mybatis-plus.mapper-locations=classpath:/mybatis/*Mapper.xml
#刷新mapper 调试神器(不建议生成环境打开)
mybatis-plus.global-config.refresh=true

######## Redis缓存配置   ######## ######## ######## ########
#spring.redis.host=172.16.0.100
#spring.redis.port=6379
#spring.redis.password=rzd@8688#
# 连接超时时间（毫秒）
#spring.redis.timeout=2000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
#spring.redis.database=13
# 连接池最大连接数（使用负值表示没有限制） 默认 8
#spring.redis.lettuce.pool.max-active=50
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
#spring.redis.lettuce.pool.max-wait=5000
# 连接池中的最大空闲连接 默认 8
#spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
#spring.redis.lettuce.pool.min-idle=1

